"use strict";(self.webpackChunkintranetdoc=self.webpackChunkintranetdoc||[]).push([[906],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},344:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:1},o="Introduction \xe0 l'API",l={unversionedId:"api-intranet/API",id:"api-intranet/API",title:"Introduction \xe0 l'API",description:"L'API d'une application Nextcloud est d\xe9velopp\xe9 en PHP, vu que Nextcloud est d\xe9velopp\xe9 sur framework Symfony.",source:"@site/docs/api-intranet/API.mdx",sourceDirName:"api-intranet",slug:"/api-intranet/API",permalink:"/docs/api-intranet/API",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API - Intranet",permalink:"/docs/category/api---intranet"},next:{title:"Controllers",permalink:"/docs/api-intranet/controllers"}},p={},s=[{value:"Squelette d&#39;une application",id:"squelette-dune-application",level:2},{value:"Cr\xe9ation d&#39;une nouvelle route",id:"cr\xe9ation-dune-nouvelle-route",level:2},{value:"Ajout d&#39;une route",id:"ajout-dune-route",level:3},{value:"Ajout d&#39;une fonction dans le Controller",id:"ajout-dune-fonction-dans-le-controller",level:3},{value:"Cr\xe9ation d&#39;un template",id:"cr\xe9ation-dun-template",level:3},{value:"Ajouter une Base de donn\xe9es",id:"ajouter-une-base-de-donn\xe9es",level:2},{value:"Cr\xe9er une BDD",id:"cr\xe9er-une-bdd",level:3},{value:"Lire les entr\xe9es d&#39;une bdd",id:"lire-les-entr\xe9es-dune-bdd",level:3},{value:"Ajout des Notifications",id:"ajout-des-notifications",level:2},{value:"Cr\xe9ation de Notifier.php",id:"cr\xe9ation-de-notifierphp",level:3},{value:"D\xe9claration du Service de Notification (Et du Widget)",id:"d\xe9claration-du-service-de-notification-et-du-widget",level:3},{value:"Cr\xe9er une notification",id:"cr\xe9er-une-notification",level:3},{value:"Supprimer une notification",id:"supprimer-une-notification",level:3},{value:"Cr\xe9ation d&#39;un Widget",id:"cr\xe9ation-dun-widget",level:2}],u={toc:s};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction-\xe0-lapi"},"Introduction \xe0 l'API"),(0,r.kt)("p",null,"L'API d'une application Nextcloud est d\xe9velopp\xe9 en PHP, vu que Nextcloud est d\xe9velopp\xe9 sur framework Symfony."),(0,r.kt)("p",null,"Dans cette introduction je vais pr\xe9senter rapidement comment cr\xe9er rapidement une nouvelle route d'API."),(0,r.kt)("h2",{id:"squelette-dune-application"},"Squelette d'une application"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"intranetagglo\n\u251c\u2500\u2500 appinfo\n\u2502   \u251c\u2500\u2500 info.xml\n\u2502   \u2514\u2500\u2500 routes.php\n\u251c\u2500\u2500 css\n\u2502   \u2514\u2500\u2500 app.css\n\u251c\u2500\u2500 js\n\u2502   \u2514\u2500\u2500 app.js\n\u251c\u2500\u2500 img\n\u2502   \u2514\u2500\u2500 app.svg\n\u251c\u2500\u2500 lib\n\u2502   \u251c\u2500\u2500 AppInfo\n\u2502   \u2502   \u2514\u2500\u2500 Application.php\n\u2502   \u251c\u2500\u2500 Controller\n\u2502   \u2502   \u2514\u2500\u2500 PageController.php\n\u2502   \u251c\u2500\u2500 Dashboard\n\u2502   \u2502   \u2514\u2500\u2500 Widget.php\n\u2502   \u251c\u2500\u2500 Db\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 Object.php\n\u2502   \u2502   \u2514\u2500\u2500 ObjectMapper.php\n\u2502   \u251c\u2500\u2500 Migration\n\u2502   \u2502   \u2514\u2500\u2500 Version000000Date20220628120000.php\n\u2502   \u251c\u2500\u2500 Noitifcation\n\u2502   \u2502   \u2514\u2500\u2500 Notifier.php\n\u2502   \u2514\u2500\u2500 Service\n\u2502       \u2514\u2500\u2500 ObjectService.php\n\u251c\u2500\u2500 templates\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 phpunit.integration.xml\n\u251c\u2500\u2500 phpunit.xml\n\u2514\u2500\u2500 COPYING\n")),(0,r.kt)("h2",{id:"cr\xe9ation-dune-nouvelle-route"},"Cr\xe9ation d'une nouvelle route"),(0,r.kt)("p",null,"Chaque route de l'API renvoie vers une fonction inscrite dans les Controllers de l'application. "),(0,r.kt)("p",null,"Par exemple pour redigirer les utilisateurs vers la page de garde de l'application, il faut modifier: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"le fichier de route ",(0,r.kt)("inlineCode",{parentName:"li"},"appinfo/routes.php ")),(0,r.kt)("li",{parentName:"ul"},"le fichier controller : ",(0,r.kt)("inlineCode",{parentName:"li"},"lib/Controller/PageController.php")),(0,r.kt)("li",{parentName:"ul"},"le template vers lequel sera diriger l'utilisateur : ",(0,r.kt)("inlineCode",{parentName:"li"},"templates/index.php"))),(0,r.kt)("h3",{id:"ajout-dune-route"},"Ajout d'une route"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="appinfo/routes.php"',title:'"appinfo/routes.php"'},"<?php\nreturn [\n    'routes' => [\n        ['name' => 'page#index', 'url' => '/', 'verb' => 'GET'],\n        [\n            'name' => 'page#functionName',\n            'url' => '/apilink',\n            'verb' => 'GET'\n        ],\n    ],\n];\n")),(0,r.kt)("p",null,"le parametre name d'une route se compose toujours de la premi\xe8re partie du nom du controller.\nPar exemple ici le fichier controller se nomme PageController.php, donc la route sera ",(0,r.kt)("inlineCode",{parentName:"p"},"page#nomdelafonction"),"."),(0,r.kt)("p",null,"La route sera ensuite accessible via l'adresse ",(0,r.kt)("inlineCode",{parentName:"p"},"nomdedomaine.fr/index.php/apps/appname/route"),"."),(0,r.kt)("h3",{id:"ajout-dune-fonction-dans-le-controller"},"Ajout d'une fonction dans le Controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Controller/PageController.php"',title:'"lib/Controller/PageController.php"'},"<?php\n\nnamespace OCA\\IntranetAgglo\\Controller;\n\nuse OCP\\IRequest;\nuse OCP\\AppFramework\\Http\\TemplateResponse;\nuse OCP\\AppFramework\\Controller;\nuse OCA\\IntranetAgglo\\AppInfo\\Application;\nuse OCP\\AppFramework\\Http\\DataResponse;\nuse OCP\\IGroupManager;\nuse OCP\\IUserSession;\nuse OCP\\IUser;\n\n\nclass PageController extends Controller\n{\n    public function __construct(IRequest $request, IGroupManager $groupmanager, IUserSession $session)\n    {\n        parent::__construct(Application::APP_ID, $request);\n        $this->groupmanager = $groupmanager;\n        $this->session = $session;\n    }\n\n    /**\n     * @NoAdminRequired\n     * @NoCSRFRequired\n     */\n    public function index()\n    {\n        return new TemplateResponse(Application::APP_ID, 'index');  // templates/index.php\n    }\n}\n")),(0,r.kt)("p",null,"ici la fonction index redirige vers un Template , \xe0 savoir index.php."),(0,r.kt)("p",null,"Toutes les librairies contenant les interfaces et m\xe9thodes de Nextcloud sont r\xe9pertori\xe9 dans leur documentation d\xe9veloppeur.\nElle est disponible sur ce site ",(0,r.kt)("a",{parentName:"p",href:"https://nextcloud-server.netlify.app/"},"https://nextcloud-server.netlify.app/")),(0,r.kt)("h3",{id:"cr\xe9ation-dun-template"},"Cr\xe9ation d'un template"),(0,r.kt)("p",null,"Le template est le front de l'application. "),(0,r.kt)("p",null,"Les fonctions de php pour pouvoir ajouter du css et du javascript :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="templates/index.php"',title:'"templates/index.php"'},"style('nomdelapp', 'nomdufichierstyle');\nscript('nomdelapp', 'nomdufichierscript');\n")),(0,r.kt)("p",null,"le nom des fichier est sans l'extension .css ou .js."),(0,r.kt)("p",null,"S'il y a besoin d'int\xe9grer plusieurs fichiers la string nomdufichier peut \xe9galement \xeatre remplac\xe9 par un tableau de String."),(0,r.kt)("h2",{id:"ajouter-une-base-de-donn\xe9es"},"Ajouter une Base de donn\xe9es"),(0,r.kt)("h3",{id:"cr\xe9er-une-bdd"},"Cr\xe9er une BDD"),(0,r.kt)("p",null,"La cr\xe9ation et modification d'une table de donn\xe9es de la bdd de Nextcloud se fait via les fichiers de ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/Migration/"),"."),(0,r.kt)("p",null,"Le nom du fichier doit \xeatre format\xe9 de mani\xe8re suivant : ",(0,r.kt)("inlineCode",{parentName:"p"},"Version000000Date20220628120000"),"."),(0,r.kt)("p",null,"Exemple de fichier de migration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Migration/Version000000Date20220628120000.php"',title:'"lib/Migration/Version000000Date20220628120000.php"'},"<?php\n\nnamespace OCA\\AppName\\Migration;\n\nuse Closure;\nuse OCP\\DB\\ISchemaWrapper;\nuse OCP\\Migration\\SimpleMigrationStep;\nuse OCP\\Migration\\IOutput;\n\nclass Version000000Date20220628120000 extends SimpleMigrationStep\n{\n\n    /**\n     * @param IOutput $output\n     * @param Closure $schemaClosure The `\\Closure` returns a `ISchemaWrapper`\n     * @param array $options\n     * @return null|ISchemaWrapper\n     */\n    public function changeSchema(IOutput $output, Closure $schemaClosure, array $options)\n    {\n        /** @var ISchemaWrapper $schema */\n        $schema = $schemaClosure();\n\n        if (!$schema->hasTable('AppnameTablename')) {\n            $table = $schema->createTable('AppnameTablename');\n            $table->addColumn('id', 'integer', [\n                'autoincrement' => true,\n                'notnull' => true,\n            ]);\n            $table->addColumn('author', 'string', [\n                'length' => 200,\n            ]);\n            $table->addColumn('title', 'text', [\n                'default' => ''\n            ]);\n            $table->addColumn('boolvar', 'boolean', [\n                'default' => false,\n                'notnull' => false,\n            ]);\n            $table->setPrimaryKey(['id']);\n        }\n        return $schema;\n    }\n}\n")),(0,r.kt)("h3",{id:"lire-les-entr\xe9es-dune-bdd"},"Lire les entr\xe9es d'une bdd"),(0,r.kt)("p",null,"on peut cr\xe9er une Entit\xe9 object de la bdd gr\xe2ce un fichier de ce style dans le r\xe9pertoire ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/Db/"),": "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Db/Object.php"',title:'"lib/Db/Object.php"'},"<?php\n\nnamespace OCA\\AppName\\Db;\n\nuse JsonSerializable;\n\nuse OCP\\AppFramework\\Db\\Entity;\n\nclass Object extends Entity implements JsonSerializable //Object est le nom de votre objet\n{\n\n    protected $author;\n    protected $title;\n    protected $boolvar;\n\n    public function jsonSerialize()\n    {\n        return [\n            'id' => $this->id,\n            'author' => $this->author,\n            'title' => $this->title,\n            'boolvar' => $this->boolvar\n        ];\n    }\n}\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Db/ObjectMapper.php"',title:'"lib/Db/ObjectMapper.php"'},"<?php\n\nnamespace OCA\\AppName\\Db;\n\nuse OCP\\AppFramework\\Db\\DoesNotExistException;\nuse OCP\\AppFramework\\Db\\Entity;\nuse OCP\\AppFramework\\Db\\QBMapper;\nuse OCP\\DB\\QueryBuilder\\IQueryBuilder;\nuse OCP\\IDBConnection;\n\nclass ObjectMapper extends QBMapper //Object est le nom de votre objet\n{\n\n    public function __construct(IDBConnection $db)\n    {\n        parent::__construct($db, 'AppnameTablename', Object::class); //Object est le nom de votre objet\n    }\n\n    /**\n     * @param int $id\n     * @return Entity|Apps\n     * @throws \\OCP\\AppFramework\\Db\\MultipleObjectsReturnedException\n     * @throws DoesNotExistException\n     */\n    public function find(int $id): Object //Object est le nom de votre objet\n    {\n        /* @var $qb IQueryBuilder */\n        $qb = $this->db->getQueryBuilder();\n\n        $qb->select('*')\n            ->from($this->getTableName())\n            ->where(\n                $qb->expr()->eq('id', $qb->createNamedParameter($id))\n            );\n\n        return $this->findEntity($qb);\n    }\n\n    /**\n     * @return array\n     */\n    public function findAll(): array\n    {\n        /* @var $qb IQueryBuilder */\n        $qb = $this->db->getQueryBuilder();\n\n        $qb->select('*')\n            ->from($this->getTableName());\n\n        return $this->findEntities($qb);\n    }\n}\n\n")),(0,r.kt)("p",null,"La Base de donn\xe9es de Nextcloud est g\xe9r\xe9e via l'utilisation de Doctrine , pour plus d'informations voir la doc de Doctrine de Symfony."),(0,r.kt)("h2",{id:"ajout-des-notifications"},"Ajout des Notifications"),(0,r.kt)("p",null,"Pour ajouter l'utilisation des notifications de Nextcloud il faut modifier 3 fichiers: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un controller qui gerera la cr\xe9ation de la notification"),(0,r.kt)("li",{parentName:"ul"},"Application.php"),(0,r.kt)("li",{parentName:"ul"},"Notifier.php")),(0,r.kt)("h3",{id:"cr\xe9ation-de-notifierphp"},"Cr\xe9ation de Notifier.php"),(0,r.kt)("p",null,"Ce fichier sera situ\xe9 dans le r\xe9pertoire ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/Notification/")," et se pr\xe9sentera sous la forme suivante :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Notification/Notifier.php"',title:'"lib/Notification/Notifier.php"'},"<?php\n\ndeclare(strict_types=1);\n\nnamespace OCA\\AppName\\Notification;\n\nuse OCA\\AppName\\AppInfo\\Application;\n\nuse InvalidArgumentException;\nuse OCP\\IURLGenerator;\nuse OCP\\Notification\\INotification;\nuse OCP\\Notification\\INotifier;\nuse OCP\\Notification\\AlreadyProcessedException;\nuse OCP\\Notification\\IManager as INotificationManager;\n\nuse OCP\\IUserManager;\nuse OCP\\IUser;\n\nclass Notifier implements INotifier\n{\n    /** @var IURLGenerator */\n    private $urlGenerator;\n\n    public function __construct(IURLGenerator $urlGenerator,  INotificationManager $notificationManager, IUserManager $userManager)\n    {\n        $this->urlGenerator = $urlGenerator;\n        $this->notificationManager = $notificationManager;\n        $this->userManager = $userManager;\n    }\n\n    /**\n     * Identifier of the notifier\n     * @return string\n     */\n    public function getID(): string\n    {\n        return Application::APP_ID;\n    }\n\n    /**\n     * Human readable name describing the notifier\n     */\n    public function getName(): string\n    {\n        return 'Application Exemple';\n    }\n\n    /**\n     * @param INotification $notification\n     * @param string $languageCode The code of the language that should be used to prepare the notification\n     */\n    public function prepare(INotification $notification, string $languageCode): INotification\n    {\n        if ($notification->getApp() !== Application::APP_ID) {\n            throw new \\InvalidArgumentException();\n        }\n\n        $notification->setParsedSubject($notification->getSubject())\n            ->setRichSubject('{app} - ' . $notification->getSubject(), [\n                'app' => [\n                    'type' => 'app',\n                    'id' => $notification->getObjectType(),\n                    'name' => $notification->getApp(),\n                ]\n            ]);\n        $notification->setParsedMessage($notification->getMessage());\n\n        $notification->setLink($this->urlGenerator->linkToRouteAbsolute('appname.page.index') . '#' . $notification->getObjectId());\n\n        $notification->setIcon($this->urlGenerator->getAbsoluteURL($this->urlGenerator->imagePath('intranetagglo', 'LogoCA2B.Mpng')));\n\n        return $notification;\n    }\n}\n\n")),(0,r.kt)("p",null,"pour voir toutes les options possible concernant la modification de la notification dans la fonction prepare , se r\xe9f\xe9rencer \xe0 la doc de Nextcloud."),(0,r.kt)("h3",{id:"d\xe9claration-du-service-de-notification-et-du-widget"},"D\xe9claration du Service de Notification (Et du Widget)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/AppInfo/Application.php"',title:'"lib/AppInfo/Application.php"'},"<?php\n\nnamespace OCA\\AppName\\AppInfo;\n\n\nuse OCA\\AppName\\Notification\\Notifier;\nuse OCA\\AppName\\Dashboard\\Widget;\n\nuse OCP\\Notification\\IManager;\nuse OCP\\AppFramework\\App;\nuse OCP\\AppFramework\\Bootstrap\\IBootContext;\nuse OCP\\AppFramework\\Bootstrap\\IBootstrap;\nuse OCP\\AppFramework\\Bootstrap\\IRegistrationContext;\n\nclass Application extends App implements IBootstrap\n{\n    public const APP_ID = 'appname';\n\n    public function __construct()\n    {\n        parent::__construct(self::APP_ID);\n    }\n\n    public function register(IRegistrationContext $context): void\n    {\n        $context->registerDashboardWidget(Widget::class);\n    }\n\n    public function boot(IBootContext $context): void\n    {\n        $manager = $context->getAppContainer()->query(IManager::class);\n        $manager->registerNotifierService(Notifier::class);\n    }\n}\n")),(0,r.kt)("h3",{id:"cr\xe9er-une-notification"},"Cr\xe9er une notification"),(0,r.kt)("p",null,"Dans le controller souhait\xe9 il suffit de d'importer l'Interface ",(0,r.kt)("inlineCode",{parentName:"p"},"OCP\\Notification\\INotification"),":\npuis de faire comme suivant : "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Controller/ObjectController.php"',title:'"lib/Controller/ObjectController.php"'},"$notification = $this->NotificationManager->createNotification();\n$notification->setApp(Application::APP_ID)\n  ->setDateTime(new \\DateTime())\n  ->setObject('ObjectName', $id)\n  ->setSubject($title, [\n    'author' =>  $author\n      ])\n  ->setUser($uid);\n\n$notification->setMessage($rq->getSubtitle()); // facultatif\n$this->NotificationManager->notify($notification);\n\n")),(0,r.kt)("h3",{id:"supprimer-une-notification"},"Supprimer une notification"),(0,r.kt)("p",null,"Pour supprimer une notification il faut recr\xe9er un object de classe notification , et lui assigner les valeurs qui permettent de l'identifier pour la suppression."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="lib/Controller/ObjectController.php"',title:'"lib/Controller/ObjectController.php"'},"$notification = $this->NotificationManager->createNotification();\n$notification->setApp(Application::APP_ID)\n  ->setObject('news', $id);\n$this->NotificationManager->markProcessed($notification);\n")),(0,r.kt)("h2",{id:"cr\xe9ation-dun-widget"},"Cr\xe9ation d'un Widget"),(0,r.kt)("p",null,"La cr\xe9ation d'un widget est assez similaire \xe0 celle des notifications , se r\xe9f\xe9rencer au code de l'application pour voir comment le fichier Widget.php est construit.\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/STaX-62/intranetagglo/blob/main/lib/Dashboard/Widget.php"},"https://github.com/STaX-62/intranetagglo/blob/main/lib/Dashboard/Widget.php")))}c.isMDXComponent=!0}}]);